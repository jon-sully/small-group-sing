---
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import { getEntries } from "astro:content";
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Button from "../../components/Button.astro";

interface Props {
    entry: CollectionEntry<"setlists">;
}

export const getStaticPaths: GetStaticPaths = async () => {
    const entries = await getCollection("setlists");
    return entries.map((entry) => ({
        params: {
            slug: entry.id,
        },
        props: { entry },
    }));
};

const { entry } = Astro.props;

const songs = await getEntries(entry.data.songs);
const songRenders = await Promise.all(
    songs.map(async (song) => await song.render()),
);
---

<Layout title={entry.data.name}>
    <main class="p-4">
        <Button as="a" variant="purple" href="/setlists" class="px-3 py-1.5"
            >‚Üê All Setlists</Button
        >
        <header>
            <h1 class="mb-4 text-4xl font-bold">{entry.data.name}</h1>
            <div class="mb-4 flex flex-col rounded-lg p-4 dark:bg-gray-800">
                <h2 class="text-lg font-bold">Jump To...</h2>
                <hr class="my-2 border-gray-700" />
                <ul class="flex flex-col gap-y-2">
                    {
                        songs.map((song, idx) => (
                            <li class="flex flex-col">
                                <a
                                    href={`#song-${idx}`}
                                    class="line-clamp-1 rounded border border-gray-700 p-1 px-2"
                                >
                                    {song.data.title}{" "}
                                    <span class="dark:text-gray-400">
                                        ({song.data.artist})
                                    </span>
                                </a>
                            </li>
                        ))
                    }
                </ul>
            </div>
        </header>
        <section class="grow space-y-4">
            {
                songRenders.map(({ Content, remarkPluginFrontmatter }, idx) => (
                    <article
                        id={`song-${idx}`}
                        class="rounded-lg p-4 dark:border-gray-700 dark:bg-gray-800"
                    >
                        <heading>
                            <h2 class="text-4xl font-bold">
                                {remarkPluginFrontmatter.title}
                            </h2>
                            <p class="text-sm italic dark:text-gray-400">
                                {remarkPluginFrontmatter.artist}
                            </p>
                            <hr class="my-2 border-gray-700" />
                        </heading>
                        <div class="prose dark:prose-invert">
                            <Content />
                        </div>
                    </article>
                ))
            }
        </section>
    </main>
    <div class="fixed bottom-0 flex w-full justify-end p-2">
        <Button
            id="dropdownMenuIconButton"
            data-dropdown-toggle="dropdownDots"
            data-dropdown-offset-skidding="-80"
            variant="purple"
            class="rounded-full p-2.5"
        >
            <svg
                class="h-6 w-6 text-gray-800 dark:text-white"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                viewBox="0 0 24 24"
            >
                <path
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-width="2"
                    d="M5 7h14M5 12h14M5 17h14"></path>
            </svg>
        </Button>
        <!-- <button
            id="dropdownMenuIconButton"
            data-dropdown-toggle="dropdownDots"
            data-dropdown-offset-skidding="-80"
            class="mb-2 me-2 rounded-full bg-blue-700 px-2.5 py-2.5 text-sm font-medium text-white hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
            type="button"
        >
        </button> -->

        <!-- Dropdown menu -->
        <div
            id="dropdownDots"
            class="z-10 hidden w-52 divide-y divide-gray-100 rounded-lg bg-white shadow dark:divide-gray-600 dark:bg-gray-700"
        >
            <ul
                class="py-2 text-sm text-gray-700 dark:text-gray-200"
                aria-labelledby="dropdownMenuIconButton"
            >
                <li>
                    <button
                        onclick="window.scrollTo({ top: 0, behavior: 'smooth' })"
                        class="flex w-full items-center gap-2 px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                    >
                        <svg
                            class="h-6 w-6 text-gray-800 dark:text-white"
                            aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg"
                            width="24"
                            height="24"
                            fill="none"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke="currentColor"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M12 6v13m0-13 4 4m-4-4-4 4"></path>
                        </svg>

                        <span>Go to Top</span>
                    </button>
                </li>
                {
                    songs.map((song, idx) => {
                        return (
                            <li class="flex flex-col">
                                <button
                                    data-jump-button={idx}
                                    class="flex items-center gap-2 px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
                                >
                                    {/* href={`#song-${idx}`} */}
                                    <svg
                                        class="h-6 w-6 text-gray-800 dark:text-white"
                                        aria-hidden="true"
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="24"
                                        height="24"
                                        fill="currentColor"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            fill-rule="evenodd"
                                            d="M17.316 4.052a.99.99 0 0 0-.9.14c-.262.19-.416.495-.416.82v8.566a4.573 4.573 0 0 0-2-.464c-1.99 0-4 1.342-4 3.443 0 2.1 2.01 3.443 4 3.443 1.99 0 4-1.342 4-3.443V6.801c.538.5 1 1.219 1 2.262 0 .56.448 1.013 1 1.013s1-.453 1-1.013c0-1.905-.956-3.18-1.86-3.942a6.391 6.391 0 0 0-1.636-.998 4 4 0 0 0-.166-.063l-.013-.005-.005-.002h-.002l-.002-.001ZM4 5.012c-.552 0-1 .454-1 1.013 0 .56.448 1.013 1 1.013h9c.552 0 1-.453 1-1.013 0-.559-.448-1.012-1-1.012H4Zm0 4.051c-.552 0-1 .454-1 1.013 0 .56.448 1.013 1 1.013h9c.552 0 1-.454 1-1.013 0-.56-.448-1.013-1-1.013H4Zm0 4.05c-.552 0-1 .454-1 1.014 0 .559.448 1.012 1 1.012h4c.552 0 1-.453 1-1.012 0-.56-.448-1.013-1-1.013H4Z"
                                            clip-rule="evenodd"
                                        />
                                    </svg>

                                    <div class="text-left">
                                        <p>{song.data.title}</p>
                                        <p class="line-clamp-1 text-xs italic dark:text-gray-400">
                                            {song.data.artist}
                                        </p>
                                    </div>
                                </button>
                            </li>
                        );
                    })
                }
            </ul>
        </div>
    </div>
</Layout>

<script>
    document.querySelectorAll("[data-jump-button]").forEach((btn, idx) => {
        btn.addEventListener("click", () => {
            document
                .getElementById(`song-${idx}`)
                ?.scrollIntoView({ behavior: "smooth" });
        });
    });
</script>
